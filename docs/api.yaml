openapi: 3.0.3

info:
  title: Wave Coach
  description: Training Management Platform for Surf
  version: 1.0.0
  
servers:
  - url: https://example.com
  
tags:
  - name: Users
    description: Operations about user

  - name: Coaches
    description: Operations about coaches
    
  - name: Athletes
    description: Operations about athletes

paths:
  /login:
    description: The resource that represents a login
    post:
      tags:
      - Users
      summary: Login with credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInputModel'
      responses:
        200:
          description: The user logged in
          headers:
            Set-Cookie:
              description: Token cookie
              schema:
                type: string
                example: 'token=Ppwh9UW8J9dahmzttFwSkGkuYwpupcNchHqzbesParY=; HttpOnly; Secure; SameSite=Strict; Path=/; Max-Age=3600'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginOutputModel'
        400:
          description: Errors when not inserting proper info on login
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UsernameIsBlank'
                  - $ref: '#/components/schemas/PasswordIsBlank'
                  - $ref: '#/components/schemas/InvalidLogin'
              examples:
                usernameIsBlank:
                  $ref: '#/components/examples/UsernameIsBlank'
                passwordIsBlank:
                  $ref: '#/components/examples/PasswordIsBlank'
                invalidLogin:
                  $ref: '#/components/examples/InvalidLogin'
                
  /logout:
    description: The resource that represents a logout
    post:
      tags:
        - Users
      summary: Logout
      responses:
        204:
          description: The user logged out
        400:
          description: Error when the token is invalid
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
        404:
          description: Error when the token is not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/TokenNotFound' 

  /coaches:
    description: The resource that represents the coaches
    post:
      tags:
      - Coaches
      summary: Create a Coach
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachCreateInputModel'
      responses:
        201:
          description: Coach was created
          headers:
            Location:
              description: The URL of the created coach resource
              schema:
                type: string
                example: "/coaches/123"
                  
        400:
          description: Failed to create a coach
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidUsername'
                  - $ref: '#/components/schemas/InsecurePassword'
                  - $ref: '#/components/schemas/UsernameAlreadyExists'
              examples:
                invalidUsername:
                  $ref: '#/components/examples/InvalidUsername'
                insecurePassword:
                  $ref: '#/components/examples/InsecurePassword'
                usernameAlreadyExists:
                  $ref: '#/components/examples/UsernameAlreadyExists'
                
  /athletes:
    description: The resource that represents the athletes
    get:
      tags:
        - Athletes
      summary: Get all athletes
      responses:
        200:
          description: The athletes were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthletesGetOutputModel'
        401:
          description: The user is not authenticated
    post:
      tags:
        - Athletes
      summary: Create an athlete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AthleteCreateInputModel'
      responses:
        201:
          description: Athlete was created
          headers:
            Location:
              description: The URL of the created athlete resource
              schema:
                type: string
                example: "/athletes/123"
        400:
          description: Failed to create an athlete
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidBirthdate'
                  - $ref: '#/components/schemas/InvalidName'
              examples:
                usernameIsBlank:
                  $ref: '#/components/examples/InvalidBirthdate'
                invalidLogin:
                  $ref: '#/components/examples/InvalidName'
        401:
          description: The user is not authenticated
      
  /athletes/{aid}:
    description: The resource that represents an athlete
    get:
      tags:
        - Athletes
      summary: Get an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
      responses:
        200:
          description: The athlete was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteGetOutputModel'
        400:
          description: Invalid athlete ID
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAthleteId'
        401:
          description: The user is not authenticated
        403:
          description: The athlete is not the coach's athlete
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The athlete was not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AthleteNotFound'
    put:
      tags:
        - Athletes
      summary: Update an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AthleteCreateInputModel'
      responses:
        204:
          description: The athlete was updated
        400:
          description: Invalid athlete ID or other input errors
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidAthleteId'
                  - $ref: '#/components/schemas/InvalidBirthdate'
                  - $ref: '#/components/schemas/InvalidName'
              examples:
                invalidAthleteId:
                  $ref: '#/components/examples/InvalidAthleteId'
                invalidBirthdate:
                  $ref: '#/components/examples/InvalidBirthdate'
                invalidName:
                  $ref: '#/components/examples/InvalidName'
        401:
          description: The user is not authenticated
        403:
          description: The athlete is not the coach's athlete
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The athlete was not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AthleteNotFound'
    delete:
      tags:
        - Athletes
      summary: Delete an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
      responses:
        204:
          description: The athlete was deleted
        400:
          description: Invalid athlete ID
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAthleteId'
        401:
          description: The user is not authenticated
        403:
          description: The athlete is not the coach's athlete
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The athlete was not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AthleteNotFound'
  
  /athletes/{aid}/code:
    description: The resource that represents the code of an athlete
    post:
      tags:
        - Athletes
      summary: Create a code for an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
      responses:
        201:
          description: Code was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteCodeOutputModel'
        400:
          description: Failed to create a code
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAthleteId'
        401:
          description: The user is not authenticated
        403:
          description: The coach is not the athlete's coach
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The athlete was not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AthleteNotFound'
  
  /athletes/code/{code}:
    description: The resource that represents the athlete by code
    get:
      tags:
        - Athletes
      summary: Get an athlete by code
      parameters:
        - name: code
          in: path
          required: true
          description: The code of the athlete
          schema:
            type: string
      responses:
        200:
          description: The athlete was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteGetOutputModel'
        400:
          description: Invalid code
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidCode'
  
  /athletes/credentials:
    description: The resource that represents the credentials of an athlete
    post:
      tags:
        - Athletes
      summary: Update the credentials of an athlete
      responses:
        204:
          description: The credentials were updated
        400:
          description: Invalid credentials
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidUsername'
                  - $ref: '#/components/schemas/UsernameAlreadyExists'
                  - $ref: '#/components/schemas/InsecurePassword'
                  - $ref: '#/components/schemas/InvalidCode'
              examples:
                invalidUsername:
                  $ref: '#/components/examples/InvalidUsername'
                usernameAlreadyExists:
                  $ref: '#/components/examples/UsernameAlreadyExists'
                insecurePassword:
                  $ref: '#/components/examples/InsecurePassword'
                invalidCode:
                  $ref: '#/components/examples/InvalidCode'

      
  /athletes/{aid}/characteristics:
    description: The resource that represents the characteristics of an athlete
    get:
      tags:
        - Athletes
      summary: Get all characteristics of an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
      responses:
        200:
          description: The characteristics were found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteCharacteristicsGetOutputModel'
        400:
          description: Invalid athlete ID
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAthleteId'
        401:
          description: The user is not authenticated
        403:
          description: The coach is not the athlete's coach
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The athlete was not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AthleteNotFound'
    post:
      tags:
        - Athletes
      summary: Create a characteristic of an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AthleteCreateCharacteristicsInputModel'
      responses:
        201:
          description: Characteristic was created
          headers:
            Location:
              description: The URL of the created characteristic resource
              schema:
                type: string
                example: "/athletes/123/characteristics/01-01-2023"
        400:
          description: Failed to create a characteristic
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidAthleteId'
                  - $ref: '#/components/schemas/InvalidDate'
                  - $ref: '#/components/schemas/InvalidCharacteristics'
              examples:
                invalidAthleteId:
                  $ref: '#/components/examples/InvalidAthleteId'
                invalidDate:
                  $ref: '#/components/examples/InvalidDate'
                invalidCharacteristics:
                  $ref: '#/components/examples/InvalidCharacteristics'
        401:
          description: The user is not authenticated
        403:
          description: The coach is not the athlete's coach
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The athlete was not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AthleteNotFound'
        409:
          description: The characteristic already exists
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CharacteristicsAlreadyExists'
      
  /athletes/{aid}/characteristics/{date}:
    description: The resource that represents a specific characteristic of an athlete
    get:
      tags:
        - Athletes
      summary: Get a specific characteristic of an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
        - name: date
          in: path
          required: true
          description: The date of the characteristic
          schema:
            type: string
      responses:
        200:
          description: The characteristic was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteCharacteristicsGetOutputModel'
        400:
          description: Invalid athlete ID or date
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidAthleteId'
                  - $ref: '#/components/schemas/InvalidDate'
              examples:
                invalidAthleteId:
                  $ref: '#/components/examples/InvalidAthleteId'
                invalidDate:
                  $ref: '#/components/examples/InvalidDate'
        401:
          description: The user is not authenticated
        403:
          description: The coach is not the athlete's coach
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The characteristic or athlete was not found
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AthleteNotFound'
                  - $ref: '#/components/schemas/CharacteristicsNotFound'
              examples:
                athleteNotFound:
                  $ref: '#/components/examples/AthleteNotFound'
                characteristicsNotFound:
                  $ref: '#/components/examples/CharacteristicsNotFound'

    put:
      tags:
        - Athletes
      summary: Update a specific characteristic of an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
        - name: date
          in: path
          required: true
          description: The date of the characteristic
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AthleteUpdateCharacteristicsInputModel'
            examples:
              validRequest:
                value:
                  weight: 72.0
                  height: 180
                  calories: 2200
                  bodyFat: 16.0
                  waistSize: 82
                  armSize: 32
                  thighSize: 52
                  tricepFat: 11
                  abdomenFat: 13
                  thighFat: 15
      responses:
        204:
          description: The characteristic was updated
        400:
          description: Invalid athlete ID, date, or input data
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidAthleteId'
                  - $ref: '#/components/schemas/InvalidDate'
                  - $ref: '#/components/schemas/InvalidCharacteristics'
              examples:
                invalidAthleteId:
                  $ref: '#/components/examples/InvalidAthleteId'
                invalidDate:
                  $ref: '#/components/examples/InvalidDate'
                invalidCharacteristics:
                  $ref: '#/components/examples/InvalidCharacteristics'
        401:
          description: The user is not authenticated
        403:
          description: The coach is not the athlete's coach
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The athlete or characteristic was not found
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AthleteNotFound'
                  - $ref: '#/components/schemas/CharacteristicsNotFound'
              examples:
                athleteNotFound:
                  $ref: '#/components/examples/AthleteNotFound'
                characteristicsNotFound:
                  $ref: '#/components/examples/CharacteristicsNotFound'

    delete:
      tags:
        - Athletes
      summary: Delete a specific characteristic of an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
        - name: date
          in: path
          required: true
          description: The date of the characteristic
          schema:
            type: string
      responses:
        204:
          description: The characteristic was deleted
        400:
          description: Invalid athlete ID or date
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidAthleteId'
                  - $ref: '#/components/schemas/InvalidDate'
        401:
          description: The user is not authenticated
        403:
          description: The coach is not the athlete's coach
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The characteristic was not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CharacteristicsNotFound'

  /athletes/{aid}/gym:
    description: The resource that represents gym activities of an athlete
    post:
      tags:
        - Athletes
      summary: Create a gym activity for an athlete
      parameters:
        - name: aid
          in: path
          required: true
          description: The ID of the athlete
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGymActivityInputModel'
            examples:
              validRequest:
                value:
                  date: "01-01-2023"
      responses:
        201:
          description: Gym activity was created
          headers:
            Location:
              description: The URL of the created gym activity resource
              schema:
                type: string
                example: "/athletes/123/gym/1"
        400:
          description: Invalid athlete ID or date
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidAthleteId'
                  - $ref: '#/components/schemas/InvalidDate'
              examples:
                invalidAthleteId:
                  $ref: '#/components/examples/InvalidAthleteId'
                invalidDate:
                  $ref: '#/components/examples/InvalidDate'
        401:
          description: The user is not authenticated
        403:
          description: The coach is not the athlete's coach
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAthletesCoach'
        404:
          description: The athlete was not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AthleteNotFound'

components:
  schemas:  
  
    # Input Models

    AthleteCreateInputModel:
      required:
        - name
        - birthdate
      type: object
      properties:
        name:
          type: string
          example: "name"
        birthdate:
          type: string
          example: "01-01-1970"
    
    CoachCreateInputModel:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: "username"
        password:
          type: string
          example: "Password123!"
          
    LoginInputModel:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: "username"
        password:
          type: string
          example: "Password123!"
          
    AthleteCreateCharacteristicsInputModel:
      required:
        - date
      type: object
      properties:
        date:
          type: string
          format: date
          example: "01-01-2023"
        weight:
          type: number
          format: float
          example: 70.5
        height:
          type: integer
          example: 175
        calories:
          type: integer
          example: 2000
        bodyFat:
          type: number
          format: float
          example: 15.5
        waistSize:
          type: integer
          example: 80
        armSize:
          type: integer
          example: 30
        thighSize:
          type: integer
          example: 50
        tricepFat:
          type: integer
          example: 10
        abdomenFat:
          type: integer
          example: 12
        thighFat:
          type: integer
          example: 14

    AthleteUpdateCharacteristicsInputModel:
      type: object
      properties:
        weight:
          type: number
          format: float
          example: 72.0
        height:
          type: integer
          example: 180
        calories:
          type: integer
          example: 2200
        bodyFat:
          type: number
          format: float
          example: 16.0
        waistSize:
          type: integer
          example: 82
        armSize:
          type: integer
          example: 32
        thighSize:
          type: integer
          example: 52
        tricepFat:
          type: integer
          example: 11
        abdomenFat:
          type: integer
          example: 13
        thighFat:
          type: integer
          example: 15

    CreateGymActivityInputModel:
      required:
        - date
      type: object
      properties:
        date:
          type: string
          format: date
          example: "01-01-2023"

    # Output Models

    AthleteCodeOutputModel:
      required:
        - code
        - expirationDate
      type: object
      properties:
        code:
          type: string
          example: "1234567890"
        expirationDate:
          type: integer
          example: 1672531199
        
    AthletesGetOutputModel:
      required:
        - id
        - username
        - name
        - birthdate
      type: object
      properties:
        id:
          type: string
          example: 1
        username:
          type: string
          example: "username"
        name:
          type: string
          example: "name"
        birthdate:
          type: string
          example: "1970-01-01"

    AthleteGetOutputModel:
      required:
        - id
        - username
        - name
        - birthdate
      type: object
      properties:
        id:
          type: string
          example: 1
        username:
          type: string
          example: "username"
        name:
          type: string
          example: "name"
        birthdate:
          type: string
          example: "01-01-1970"
    
    CreateCharacteristicsOutputModel:
      required:
        - id
        - date
        - value
      type: object
      properties:
        id:
          type: string
          example: 1
        date:
          type: string
          example: "01-01-1970"
        value:
          type: string
          example: "value"
    
    LoginOutputModel:
      required:
        - id
        - username
        - token
      type: object
      properties:
        id:
          type: string
          example: 1
        username:
          type: string
          example: "username"
        token:
          type: string
          example: "token"
    
    AthleteCharacteristicsGetOutputModel:
      required:
        - uid
        - date
        - weight
        - height
        - bmi
        - calories
        - bodyFat
        - waistSize
        - armSize
        - thighSize
        - tricepFat
        - abdomenFat
        - thighFat
      type: object
      properties:
        uid:
          type: string
          example: "123"
        date:
          type: string
          example: "01-01-2023"
        weight:
          type: number
          format: float
          example: 70.5
        height:
          type: integer
          example: 175
        bmi:
          type: number
          format: float
          example: 23.0
        calories:
          type: integer
          example: 2000
        bodyFat:
          type: number
          format: float
          example: 15.5
        waistSize:
          type: integer
          example: 80
        armSize:
          type: integer
          example: 30
        thighSize:
          type: integer
          example: 50
        tricepFat:
          type: integer
          example: 10
        abdomenFat:
          type: integer
          example: 12
        thighFat:
          type: integer
          example: 14



    # Problems

    AthleteNotFound:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    CharacteristicsAlreadyExists:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
    
    InsecurePassword:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    InvalidAthleteId:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    InvalidBirthdate:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
    
    InvalidCode:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    InvalidDate:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
    
    InvalidLogin:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    InvalidName:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    InvalidUsername:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
          
    InvalidToken:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    InvalidCharacteristics:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    NotAthletesCoach:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
    
    PasswordIsBlank:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
          
    TokenNotFound:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
    
    UsernameAlreadyExists:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
    
    UsernameIsBlank:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""

    CharacteristicsNotFound:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          example: ""
  
  examples:
  
    InsecurePassword:
      value:
        type: ""

    InvalidBirthdate:
      value:
        type: ""

    InvalidCode:
      value:
        type: ""
  
    InvalidLogin:
      value:
        type: ""
        
    InvalidName:
      value:
        type: ""

    InvalidUsername:
      value:
        type: ""
    
    InvalidCharacteristics:
      value:
        type: ""

    NotAthletesCoach:
      value:
        type: ""
        
    PasswordIsBlank:
      value:
        type: ""
        
    UsernameAlreadyExists:
      value:
        type: ""
        
    UsernameIsBlank:
      value:
        type: ""

    CharacteristicsNotFound:
      value:
        type: ""

    InvalidAthleteId:
      value:
        type: ""

    InvalidDate:
      value:
        type: ""

    AthleteNotFound:
      value:
        type: ""

    CharacteristicsAlreadyExists:
      value:
        type: ""
